apiVersion: v1
kind: Namespace
metadata:
  name: comprobantes
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: comprobantes-ingesta
  namespace: comprobantes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: comprobantes-ingesta
  template:
    metadata:
      labels:
        app: comprobantes-ingesta
    spec:
      containers:
        - name: ingesta
          image: comprobantes-ingesta:1.0.0
          #imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8083
          env:
            # Quarkus
            - name: QUARKUS_HTTP_PORT
              value: "8083"
            - name: QUARKUS_KAFKA_DEVSERVICES_ENABLED
              value: "false"

            # Kafka bootstrap 
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "192.168.65.3:9094"            

          readinessProbe:
            httpGet: { path: /q/health/ready, port: 8083 }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /q/health/live, port: 8083 }
            initialDelaySeconds: 10
            periodSeconds: 10
---
# Service solo si quieres acceder al /q/health desde fuera del cluster
apiVersion: v1
kind: Service
metadata:
  name: comprobantes-ingesta
  namespace: comprobantes
spec:
  selector:
    app: comprobantes-ingesta
  ports:
    - port: 8083
      targetPort: 8083
      protocol: TCP
  type: ClusterIP
