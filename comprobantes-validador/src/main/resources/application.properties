# Puerto (si luego quieres exponer algo REST)
quarkus.http.port=8082

# Desactivar DevServices (tú ya tienes Kafka)
quarkus.kafka.devservices.enabled=false

# Bootstrap Kafka
kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9094}

# IN: consume de comprobantes.ingesta
mp.messaging.incoming.comprobantesin.connector=smallrye-kafka
mp.messaging.incoming.comprobantesin.topic=comprobantesingesta
mp.messaging.incoming.comprobantesin.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.comprobantesin.value.deserializer=ec.gob.sri.kafka.ComprobanteEventoDeserializer
mp.messaging.incoming.comprobantesin.auto.offset.reset=earliest
mp.messaging.incoming.comprobantesin.enable.auto.commit=true

# OUT: publica a comprobantes.validado
mp.messaging.outgoing.comprobantesvalidadoout.connector=smallrye-kafka
mp.messaging.outgoing.comprobantesvalidadoout.topic=comprobantesvalidado
mp.messaging.outgoing.comprobantesvalidadoout.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.comprobantesvalidadoout.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.comprobantesvalidadoout.acks=all
mp.messaging.outgoing.comprobantesvalidadoout.enable.idempotence=true

# MISMO group.id en todos los pods del validador  IMPORTABTE PARA BALANCEAR
mp.messaging.incoming.comprobantesin.group.id=comprobantes-validador

# Health UI
quarkus.smallrye-health.ui.always-include=true

# (Opcional) logs útiles
quarkus.log.category."org.apache.kafka".level=INFO
quarkus.log.category."io.smallrye.reactive.messaging".level=INFO
